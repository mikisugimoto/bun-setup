- name: Add Docker GPG key
  ansible.builtin.apt_key:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    keyring: /usr/share/keyrings/docker-archive-keyring.gpg
  register: docker_key
  tags:
    - packages

- name: Set up stable Docker repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release | lower }} stable"
    state: present
    filename: docker
  tags:
    - packages

- name: Install Docker packages
  ansible.builtin.package:
    state: present
    name: "{{ lookup('community.general.flattened', docker_packages) }}"
  tags:
    - packages

- name: Get latest docker-compose tag
  shell: "curl --silent 'https://api.github.com/repos/docker/compose/releases/latest' | jq -r '.tag_name'"
  register: compose_version
  tags:
    - packages

- name: Install docker-compose
  get_url:
    url: "https://github.com/docker/compose/releases/download/{{ compose_version.stdout }}/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}"
    dest: /usr/local/bin/docker-compose
    mode: +x
  tags:
    - packages

- name: Restart network
  service:
    name: NetworkManager
    state: restarted
  tags:
    - config

- name: get recommended NVIDIA driver version
  shell: "ubuntu-drivers devices | grep recommended | sed -u 's/.*\\(nvidia-driver-[0-9]*\\).*/\\1/'"
  register: driver_version
  tags:
    - never
    - nvidia

- name: install recommended NVIDIA driver
  ansible.builtin.package:
    name: "{{ driver_version.stdout }}"
    state: present
  tags:
    - never
    - nvidia

- name: reboot to complete driver install
  reboot:
  tags:
    - never
    - nvidia
