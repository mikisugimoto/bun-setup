---
- name: Install packages
  ansible.builtin.package:
    state: present
    name: "{{ lookup('community.general.flattened', base_packages, personal_packages) }}"
  tags:
    - packages

# snap package manager not included in ansible.builtin.package
- name: install snap packages
  snap:
    name: "{{ snap_packages }}"
  tags:
    - packages

- name: install classic snap packages
  snap:
    name: "{{ classic_snap_packages }}"
    classic: yes
  tags:
    - packages

- name: refresh snap packages
  shell: "snap refresh"
  tags:
    - packages

- name: copy dotfiles
  ansible.builtin.copy:
    dest: "{{ lookup('env', 'HOME') }}/.{{ item | basename }}"
    force: yes
    group: "{{ group }}"
    mode: 0644
    owner: "{{ user }}"
    src: "{{ item }}"
  with_fileglob:
    - "files/*"
  tags:
    - config

- name: create docker group
  ansible.builtin.group:
    name: docker
    state: present
  tags:
    - config

- name: add user to docker group
  ansible.builtin.user:
    append: yes
    groups:
      - docker
    name: "{{ lookup('env','USER') }}"
  tags:
    - config

- name: Restart network
  service:
    name: network-manager
    state: restarted

- name: get recommended NVIDIA driver version
  shell: "ubuntu-drivers devices | grep recommended | sed -u 's/.*\\(nvidia-driver-[0-9]*\\).*/\\1/'"
  register: driver_version
  tags:
    - never
    - nvidia

- name: install recommended NVIDIA driver
  ansible.builtin.package:
    name: "{{ driver_version.stdout }}"
    state: present
  tags:
    - never
    - nvidia

- name: reboot to complete driver install
  reboot:
  tags:
    - never
    - nvidia
